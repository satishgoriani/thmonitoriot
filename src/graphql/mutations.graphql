# this is an auto generated file. This will be overwritten
mutation CreateLocation(
  $input: CreateLocationInput!
  $condition: ModelLocationConditionInput
) {
  createLocation(input: $input, condition: $condition) {
    id
    name
    temperaturemin
    temperaturemax
    humiditymin
    humiditymax
    currenttemp
    currenthumidity
    locationtypename
    sensors
    sensorsasstring
    locationtypeID
    companyID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateLocation(
  $input: UpdateLocationInput!
  $condition: ModelLocationConditionInput
) {
  updateLocation(input: $input, condition: $condition) {
    id
    name
    temperaturemin
    temperaturemax
    humiditymin
    humiditymax
    currenttemp
    currenthumidity
    locationtypename
    sensors
    sensorsasstring
    locationtypeID
    companyID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteLocation(
  $input: DeleteLocationInput!
  $condition: ModelLocationConditionInput
) {
  deleteLocation(input: $input, condition: $condition) {
    id
    name
    temperaturemin
    temperaturemax
    humiditymin
    humiditymax
    currenttemp
    currenthumidity
    locationtypename
    sensors
    sensorsasstring
    locationtypeID
    companyID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateLocationtype(
  $input: CreateLocationtypeInput!
  $condition: ModelLocationtypeConditionInput
) {
  createLocationtype(input: $input, condition: $condition) {
    id
    name
    LocationtypeLocations {
      nextToken
      startedAt
    }
    companyID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateLocationtype(
  $input: UpdateLocationtypeInput!
  $condition: ModelLocationtypeConditionInput
) {
  updateLocationtype(input: $input, condition: $condition) {
    id
    name
    LocationtypeLocations {
      nextToken
      startedAt
    }
    companyID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteLocationtype(
  $input: DeleteLocationtypeInput!
  $condition: ModelLocationtypeConditionInput
) {
  deleteLocationtype(input: $input, condition: $condition) {
    id
    name
    LocationtypeLocations {
      nextToken
      startedAt
    }
    companyID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateCompany(
  $input: CreateCompanyInput!
  $condition: ModelCompanyConditionInput
) {
  createCompany(input: $input, condition: $condition) {
    id
    name
    registeredemail
    adminpass
    contactname
    contactnumber
    domainname
    highsecpin
    CompanySensors {
      nextToken
      startedAt
    }
    CompanyLocationtype {
      nextToken
      startedAt
    }
    Locations {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateCompany(
  $input: UpdateCompanyInput!
  $condition: ModelCompanyConditionInput
) {
  updateCompany(input: $input, condition: $condition) {
    id
    name
    registeredemail
    adminpass
    contactname
    contactnumber
    domainname
    highsecpin
    CompanySensors {
      nextToken
      startedAt
    }
    CompanyLocationtype {
      nextToken
      startedAt
    }
    Locations {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteCompany(
  $input: DeleteCompanyInput!
  $condition: ModelCompanyConditionInput
) {
  deleteCompany(input: $input, condition: $condition) {
    id
    name
    registeredemail
    adminpass
    contactname
    contactnumber
    domainname
    highsecpin
    CompanySensors {
      nextToken
      startedAt
    }
    CompanyLocationtype {
      nextToken
      startedAt
    }
    Locations {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateSensor(
  $input: CreateSensorInput!
  $condition: ModelSensorConditionInput
) {
  createSensor(input: $input, condition: $condition) {
    id
    serialnumber
    remarks
    lastreadtemp
    lastreadhumidity
    lastreceivedon
    companyID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateSensor(
  $input: UpdateSensorInput!
  $condition: ModelSensorConditionInput
) {
  updateSensor(input: $input, condition: $condition) {
    id
    serialnumber
    remarks
    lastreadtemp
    lastreadhumidity
    lastreceivedon
    companyID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteSensor(
  $input: DeleteSensorInput!
  $condition: ModelSensorConditionInput
) {
  deleteSensor(input: $input, condition: $condition) {
    id
    serialnumber
    remarks
    lastreadtemp
    lastreadhumidity
    lastreceivedon
    companyID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
